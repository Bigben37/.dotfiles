set nocompatible " no compatibility for very old vim verions

" Colors {{{
set t_Co=256            " set 256 colors
colorscheme badwolf     " colorscheme
syntax enable           " enable syntax processing
" }}}

" Spaces & Tabs {{{
set tabstop=4           " number of visual spaces per TAB
set softtabstop=4       "number of spaces in tab when editing
set expandtab           " tabs are spaces
set shiftwidth=4        " number of space characters inserted for indentation
set smartindent
set autoindent
" }}}

" UI Config {{{
set number              " show line numbers
set showcmd             " show command line in bottom bar
set cursorline          " highlight current line
set colorcolumn=80      " set helper column
filetype indent on      " load filetype-specific indent files
set wildmenu            " visual autocomplete for command menu
set lazyredraw          " redraw only when we need to
"}}}

" Searching {{{
set incsearch               " search as characters are entered
set hlsearch                " hightlight matches
" turn off search hightlight with ,<space>
nnoremap <leader><space> :nohlsearch<CR>
"}}}

" Folding {{{
set foldenable              " enable folding
set foldlevelstart=10       " open most folds by default
set foldnestmax=10          " 10 nested fold max
nnoremap <space> za         " space opens/closes folds
set foldmethod=indent       " fold based on indent level
" }}}

" Leader Shortcuts {{{
let leader = ","
nnoremap <leader>ev :vsp $MYVIMRC<CR>       " edit vimrc
nnoremap <leader>ez :vsp ~/.zshrc<CR>       " edit zshrc
nnoremap <leader>sv :source $MYVIMRC<CR>    " source vimrc
nnoremap <leader>u :GundoToggle<CR>         " toogle gundo
" }}}

" CtrlP {{{
let g:ctrlp_match_window = 'bottom,order:ttb'   " match from top to bottom
let g:ctrlp_switch_buffer = 0                   " open files in new buffers 
let g:ctrlp_working_path_mode = 0               " allowes to change cwd during session
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
"}}}

" File specific settings {{{
augroup configgroup
    autocmd!
    autocmd VimEnter * highlight clear SignColumn
    autocmd BufWritePre *.php,*.py,*.js,*.txt,*.hs,*.java,*.md
                    \:call <SID>StripTrailingWhitespaces()
    autocmd FileType python setlocal commentstring=#\ %s
    autocmd BufEnter *.zsh-theme setlocal filetype=zsh
    autocmd BufEnter Makefile setlocal noexpandtab
    autocmd BufEnter *.sh setlocal tabstop=2
    autocmd BufEnter *.sh setlocal shiftwidth=2
    autocmd BufEnter *.sh setlocal softtabstop=2
augroup END
" }}}

" Backups {{{
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup
" }}}

" Powerline {{{
let g:powerline_pycmd="py3"
python3 from powerline.vim import setup as powerline_setup
python3 powerline_setup()
python3 del powerline_setup
set laststatus=2
" }}}

set modelines=1
" vim:foldmethod=marker:foldlevel=0
